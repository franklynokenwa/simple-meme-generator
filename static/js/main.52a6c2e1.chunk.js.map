{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","src","alt","React","Component","MemeGenerator","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","changeImage","fetch","then","response","json","data","setState","event","target","name","value","console","log","this","preventDefault","randNum","Math","floor","random","memes","length","randMemeImg","url","className","placeholder","type","onChange","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","document","getElementById","ReactDOM","render"],"mappings":"wOAEMA,E,4JACF,WACI,OACI,mCACI,qBACIC,IAAI,iEACJC,IAAI,aAER,sD,GARKC,IAAMC,WAcZJ,I,cCyDAK,E,kDAtEX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,YAAa,gCACbC,YAAa,IAGjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAVV,E,qDAab,WAAoB,IAAD,OACfE,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKC,SAAS,CAC1BT,YAAcQ,S,0BAMtB,SAAaE,GACT,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbC,QAAQC,IAAIH,GACZI,KAAKP,SAAL,eACKG,EAAOC,M,yBAGhB,SAAYH,GACRA,EAAMO,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,KAAKpB,MAAMI,YAAYQ,KAAKc,MAAMC,QACvEC,EAAcR,KAAKpB,MAAMI,YAAYQ,KAAKc,MAAMJ,GAASO,IAC/DT,KAAKP,SAAS,CACVV,YAAayB,M,oBAKrB,WACI,OACI,gCACI,uBAAME,UAAU,YAAhB,UACI,uBACIC,YAAY,aACZC,KAAK,OAAOhB,KAAK,UACjBC,MAAOG,KAAKpB,MAAMC,QAClBgC,SAAWb,KAAKf,eAEpB,uBACI0B,YAAY,aACZC,KAAK,OACLhB,KAAK,aACLC,MAAOG,KAAKpB,MAAME,WAClB+B,SAAWb,KAAKf,eAGpB,wBAAQ6B,QAASd,KAAKb,YAAtB,oBAEJ,sBAAKuB,UAAU,OAAf,UACI,qBAAKnC,IAAKyB,KAAKpB,MAAMG,YAAaP,IAAI,KACtC,oBAAIkC,UAAU,MAAd,SAAqBV,KAAKpB,MAAMC,UAChC,oBAAI6B,UAAU,SAAd,SAAwBV,KAAKpB,MAAME,uB,GAhE3BL,IAAMC,WCI5BqC,G,kKACJ,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALUtC,IAAMC,YAUTqC,ICJAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFRO,EAAMC,SAASC,eAAe,QAEpCC,IAASC,OACT,cAAC,EAAD,IACAJ,GAEAR,M","file":"static/js/main.52a6c2e1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return (\r\n            <header>\r\n                <img \r\n                    src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" \r\n                    alt=\"Problem?\"\r\n                />\r\n                <p>Meme Generator</p>\r\n            </header>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass MemeGenerator extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: [],\r\n            \r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.changeImage = this.changeImage.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(data => { this.setState({\r\n            allMemeImgs : data\r\n            })\r\n        \r\n        })\r\n    }\r\n    \r\n    handleChange(event){\r\n        const {name, value} = event.target;\r\n        console.log(name);\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    changeImage(event){\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.data.memes.length)\r\n        const randMemeImg = this.state.allMemeImgs.data.memes[randNum].url\r\n        this.setState({\r\n            randomImage: randMemeImg\r\n        })           \r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\">\r\n                    <input \r\n                        placeholder=\"Enter text\" \r\n                        type=\"text\" name=\"topText\" \r\n                        value={this.state.topText} \r\n                        onChange= {this.handleChange}\r\n                    />\r\n                    <input \r\n                        placeholder=\"Enter text\" \r\n                        type=\"text\" \r\n                        name=\"bottomText\" \r\n                        value={this.state.bottomText} \r\n                        onChange= {this.handleChange} \r\n                    />\r\n\r\n                    <button onClick={this.changeImage}>Gen</button>\r\n                </form>\r\n                <div className=\"meme\">\r\n                    <img src={this.state.randomImage} alt=\"\" />\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator;","import React from 'react'\n\nimport Header from './Header';\nimport MemeGenerator from './MemeGenerator';\nimport '../App.css';\n\nclass App extends React.Component{\n  render(){\n    return(\n      <div>\n        <Header/>\n        <MemeGenerator/>\n      </div>\n    )\n  }\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root =document.getElementById('root');\n\nReactDOM.render(\n<App/>,\nroot);\n\nreportWebVitals();"],"sourceRoot":""}